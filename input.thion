[Environment]
MeetingRoom;
[Players]
Alice(3)[aMsg(2),bMsg(2),cMsg(3),dMsg(3)];
Eve(3)[eMsg(3),fMsg(2),gMsg(3),hMsg(3)];
Bob(1)[iMsg(1),jMsg(1),kMsg(1),lMsg(1)];
[PreConditions]
location(Alice, MeetingRoom);
location(Eve, MeetingRoom);
locked(MeetingRoom);
[MainFlow]
share(Alice, aMsg, Eve);
unlock(Alice,MeetingRoom);
share(Eve, enc[eMsg], Alice);
share(Alice, bMsg, Eve);
share(Alice, enc[eMsg], Bob);
share(Eve, enc[aMsg], Alice);
share(Alice, Msg, Eve);
share(Alice, bMsg, Eve);
share(Alice, enc[eMsg], Bob);
share(Eve, enc[aMsg], Alice);
share(Alice, Msg, Eve);
share(Alice, bMsg, Eve);
share(Alice, enc[eMsg], Bob);
share(Eve, enc[aMsg], Alice);
share(Alice, Msg, Eve);
share(Alice, cMsg, Eve);
enter(Bob,MeetingRoom);
share(Alice, bMsg, Eve);
share(Alice, enc[cMsg], Bob);
share(Eve, enc[fMsg], Alice);
share(Alice, Msg, Eve);
enter(Bob,MeetingRoom);
share(Eve, Msg, Alice);
share(Alice, Msg, Bob);
share(Bob, Msg, Eve);
enter(Eve,BreakRoom);
lock(Bob,BreakRoom);
unlock(Bob,BreakRoom);
share(Bob,message,Eve);
share(Alice, bMsg, Eve);
share(Alice, enc[eMsg], Bob);
share(Eve, enc[aMsg], Alice);
share(Alice, Msg, Eve);
share(Alice, bMsg, Eve);
share(Alice, enc[eMsg], Bob);
share(Eve, enc[aMsg], Alice);
share(Alice, Msg, Eve);
share(Alice, bMsg, Eve);
share(Alice, enc[eMsg], Bob);
share(Alice, enc[eMsg], Bob);
share(Eve, enc[aMsg], Alice);
share(Alice, Msg, Eve);
share(Alice, bMsg, Eve);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
share(Bob, enc[jMsg], Alice);
share(Alice, enc[bMsg], Eve);
share(Eve, enc[bMsg], Alice);
[PostConditions]
location(Alice, MeetingRoom);
location(Eve, MeetingRoom);
locked(MeetingRoom);
has(Alice,aMsg);
has(Alice,bMsg);
has(Alice,eMsg);
has(Eve,aMsg);
has(Eve,bMsg);
has(Eve,eMsg);